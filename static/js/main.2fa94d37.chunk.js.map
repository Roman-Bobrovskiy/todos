{"version":3,"sources":["components/TodoForm.tsx","components/TodoList.tsx","views/TodosPages.tsx","views/AboutPages.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["TodoForm","props","ref","useRef","className","type","id","placeholder","onKeyPress","event","key","onAdd","current","value","htmlFor","TodoList","todos","onToggle","onRemove","length","map","todo","classes","completed","push","join","onChange","bind","checked","title","onClick","preventDefault","removeHendler","TodosPages","useState","setTodos","useEffect","saved","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","confirm","filter","AboutPages","history","useNavigate","Navbar","to","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"kMAMaA,EAAoC,SAACC,GAChD,IAAMC,EAAMC,iBAAyB,MASrC,OACE,sBAAKC,UAAU,kBAAf,UACE,uBACEF,IAAKA,EACLG,KAAK,OACLC,GAAG,QACHC,YAAY,kBACZC,WAdiB,SAACC,GACJ,UAAdA,EAAMC,MACRT,EAAMU,MAAMT,EAAIU,QAASC,OACzBX,EAAIU,QAASC,MAAQ,OAarB,uBAAOC,QAAQ,QAAQV,UAAU,SAAjC,iCChBOW,EAAoC,SAAC,GAI3C,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,SAOA,OACE,+BACoB,IAAjBF,EAAMG,QAAgB,mBAAGf,UAAU,SAAb,sBACtBY,EAAMI,KAAI,SAACC,GACV,IAAMC,EAAU,CAAC,QAIjB,OAFAD,EAAKE,WAAaD,EAAQE,KAAK,aAG7B,oBAAkBpB,UAAWkB,EAAQG,KAAK,MAA1C,SACE,kCACE,uBACEC,SAAUT,EAASU,KAAK,KAAMN,EAAKf,IACnCD,KAAK,WACLuB,QAASP,EAAKE,YAEhB,+BAAOF,EAAKQ,QACZ,mBACEC,QAAS,SAACrB,GAAD,OAvBD,SAACA,EAAyBH,GAC9CG,EAAMsB,iBACNb,EAASZ,GAqBuB0B,CAAcvB,EAAOY,EAAKf,KAC9CF,UAAU,0BAFZ,wBARKiB,EAAKf,WCrBX2B,EAAuB,WAClC,MAA0BC,mBAAkB,IAA5C,mBAAOlB,EAAP,KAAcmB,EAAd,KAEAC,qBAAU,WACR,IAAMC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,MAC1DN,EAASE,KACR,IAEHD,qBAAU,WACRI,aAAaE,QAAQ,QAASJ,KAAKK,UAAU3B,MAC5C,CAACA,IAyBJ,OACE,qCACE,cAAC,EAAD,CAAUL,MAzBK,SAACkB,GAClB,IAAMe,EAAU,CACdf,MAAOA,EACPvB,GAAIuC,KAAKC,MACTvB,WAAW,GAEbY,GAAS,SAACY,GAAD,OAAWH,GAAX,mBAAuBG,UAoB9B,cAAC,EAAD,CACE/B,MAAOA,EACPE,SAVgB,SAACZ,GACD0C,QAAQ,mBAEbb,GAAS,SAACY,GAAD,OAAUA,EAAKE,QAAO,SAAC5B,GAAD,OAAUA,EAAKf,KAAOA,SAQhEW,SApBgB,SAACX,GACrB6B,GAAS,SAACY,GAAD,OACPA,EAAK3B,KAAI,SAACC,GAER,OADAA,EAAKE,UAAYF,EAAKf,KAAOA,IAAOe,EAAKE,UAClCF,eC7BF6B,EAAuB,WAClC,IAAMC,EAAUC,cAEhB,OACE,qCACE,uCACA,+PAMA,wBAAQhD,UAAU,MAAM0B,QAAS,kBAAMqB,EAAQ,MAA/C,sBCMSE,EAlByB,kBACtC,8BACE,sBAAKjD,UAAU,+BAAf,UACE,cAAC,IAAD,CAASkD,GAAG,IAAIlD,UAAU,aAA1B,kBAGA,qBAAIA,UAAU,8BAAd,UACE,6BACE,cAAC,IAAD,CAASkD,GAAG,IAAZ,oBAEF,6BACE,cAAC,IAAD,CAASA,GAAG,SAAZ,8BCSKC,G,MAdsB,WACnC,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,qBAAKnD,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoD,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,gBCXxCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2fa94d37.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\n\ninterface TodoFormProps {\n  onAdd(title: string): void;\n}\n\nexport const TodoForm: React.FC<TodoFormProps> = (props) => {\n  const ref = useRef<HTMLInputElement>(null);\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      props.onAdd(ref.current!.value);\n      ref.current!.value = \"\";\n    }\n  };\n\n  return (\n    <div className=\"input-field mt2\">\n      <input\n        ref={ref}\n        type=\"text\"\n        id=\"titel\"\n        placeholder=\"Enter task name\"\n        onKeyPress={handleKeyPress}\n      />\n      <label htmlFor=\"title\" className=\"active\">\n        Enter task name\n      </label>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ITodo } from \"./interfaces\";\n\ntype TodoListprops = {\n  todos: ITodo[];\n  onToggle(id: number): void;\n  onRemove(id: number): void;\n};\n\nexport const TodoList: React.FC<TodoListprops> = ({\n  todos,\n  onToggle,\n  onRemove,\n}) => {\n  const removeHendler = (event: React.MouseEvent, id: number) => {\n    event.preventDefault();\n    onRemove(id);\n  };\n\n  return (\n    <ul>\n      {todos.length === 0 && <p className=\"center\">No tasks</p>}\n      {todos.map((todo) => {\n        const classes = [\"todo\"];\n\n        todo.completed && classes.push(\"completed\");\n\n        return (\n          <li key={todo.id} className={classes.join(\"  \")}>\n            <label>\n              <input\n                onChange={onToggle.bind(null, todo.id)}\n                type=\"checkbox\"\n                checked={todo.completed}\n              />\n              <span>{todo.title}</span>\n              <i\n                onClick={(event) => removeHendler(event, todo.id)}\n                className=\"material-icons red-text\"\n              >\n                delete\n              </i>\n            </label>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { ITodo } from \"../components/interfaces\";\nimport { TodoForm } from \"../components/TodoForm\";\nimport { TodoList } from \"../components/TodoList\";\n\ndeclare var confirm: (boolean: string) => boolean;\n\nexport const TodosPages: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"todos\") || \"[]\") as ITodo[];\n    setTodos(saved);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const addHandler = (title: string) => {\n    const newTodo = {\n      title: title,\n      id: Date.now(),\n      completed: false,\n    };\n    setTodos((prev) => [newTodo, ...prev]);\n  };\n\n  const toggleHandler = (id: number) => {\n    setTodos((prev) =>\n      prev.map((todo) => {\n        todo.completed = todo.id === id && !todo.completed;\n        return todo;\n      })\n    );\n  };\n\n  const removeHendler = (id: number) => {\n    const shoudRemove = confirm(\"Please confirm\");\n\n    shoudRemove && setTodos((prev) => prev.filter((todo) => todo.id !== id));\n  };\n  return (\n    <>\n      <TodoForm onAdd={addHandler} />\n      <TodoList\n        todos={todos}\n        onRemove={removeHendler}\n        onToggle={toggleHandler}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport const AboutPages: React.FC = () => {\n  const history = useNavigate();\n\n  return (\n    <>\n      <h1>About</h1>\n      <p>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Doloribus\n        dolores harum dolorum dolor tenetur doloremque error reiciendis ducimus\n        neque nam? Placeat dolore eligendi odit sint quis cum quibusdam, vero\n        consequatur.\n      </p>\n      <button className=\"btn\" onClick={() => history(\"/\")}>\n        Back\n      </button>\n    </>\n  );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar: React.FunctionComponent = () => (\n  <nav>\n    <div className=\"nav-wrapper #2196f3 blue px1\">\n      <NavLink to=\"/\" className=\"brand-logo\">\n        Logo\n      </NavLink>\n      <ul className=\"right hide-on-med-and-down \">\n        <li>\n          <NavLink to=\"/\">List</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/about\">about</NavLink>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);\n\nexport default Navbar;\n","import React from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { TodosPages } from \"./views/TodosPages\";\nimport { AboutPages } from \"./views/AboutPages\";\n\nimport Navbar from \"./components/Navbar\";\n\nimport \"./index.css\";\n\nconst App: React.FunctionComponent = () => {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<TodosPages />} />\n          <Route path=\"/about\" element={<AboutPages />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}