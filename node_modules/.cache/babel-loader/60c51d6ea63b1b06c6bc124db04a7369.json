{"ast":null,"code":"import _toConsumableArray from\"/home/rb/TypeScript/todos/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/rb/TypeScript/todos/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{TodoForm}from\"../components/TodoForm\";import{TodoList}from\"../components/TodoList\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var TodosPages=function TodosPages(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todos=_useState2[0],setTodos=_useState2[1];useEffect(function(){var saved=JSON.parse(localStorage.getItem(\"todos\")||\"[]\");setTodos(saved);},[]);useEffect(function(){localStorage.setItem(\"todos\",JSON.stringify(todos));},[todos]);var addHandler=function addHandler(title){var newTodo={title:title,id:Date.now(),completed:false};setTodos(function(prev){return[newTodo].concat(_toConsumableArray(prev));});};var toggleHandler=function toggleHandler(id){setTodos(function(prev){return prev.map(function(todo){todo.completed=todo.id===id&&!todo.completed;return todo;});});};var removeHendler=function removeHendler(id){var shoudRemove=confirm(\"Please confirm\");shoudRemove&&setTodos(function(prev){return prev.filter(function(todo){return todo.id!==id;});});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TodoForm,{onAdd:addHandler}),/*#__PURE__*/_jsx(TodoList,{todos:todos,onRemove:removeHendler,onToggle:toggleHandler})]});};","map":{"version":3,"sources":["/home/rb/TypeScript/todos/src/views/TodosPages.tsx"],"names":["React","useState","useEffect","TodoForm","TodoList","TodosPages","todos","setTodos","saved","JSON","parse","localStorage","getItem","setItem","stringify","addHandler","title","newTodo","id","Date","now","completed","prev","toggleHandler","map","todo","removeHendler","shoudRemove","confirm","filter"],"mappings":"gOAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,QAAT,KAAyB,wBAAzB,CACA,OAASC,QAAT,KAAyB,wBAAzB,C,6IAIA,MAAO,IAAMC,CAAAA,UAAoB,CAAG,QAAvBA,CAAAA,UAAuB,EAAM,CACxC,cAA0BJ,QAAQ,CAAU,EAAV,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eAEAL,SAAS,CAAC,UAAM,CACd,GAAMM,CAAAA,KAAK,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,GAAiC,IAA5C,CAAd,CACAL,QAAQ,CAACC,KAAD,CAAR,CACD,CAHQ,CAGN,EAHM,CAAT,CAKAN,SAAS,CAAC,UAAM,CACdS,YAAY,CAACE,OAAb,CAAqB,OAArB,CAA8BJ,IAAI,CAACK,SAAL,CAAeR,KAAf,CAA9B,EACD,CAFQ,CAEN,CAACA,KAAD,CAFM,CAAT,CAIA,GAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAmB,CACpC,GAAMC,CAAAA,OAAO,CAAG,CACdD,KAAK,CAAEA,KADO,CAEdE,EAAE,CAAEC,IAAI,CAACC,GAAL,EAFU,CAGdC,SAAS,CAAE,KAHG,CAAhB,CAKAd,QAAQ,CAAC,SAACe,IAAD,SAAWL,OAAX,4BAAuBK,IAAvB,IAAD,CAAR,CACD,CAPD,CASA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACL,EAAD,CAAgB,CACpCX,QAAQ,CAAC,SAACe,IAAD,QACPA,CAAAA,IAAI,CAACE,GAAL,CAAS,SAACC,IAAD,CAAU,CACjBA,IAAI,CAACJ,SAAL,CAAiBI,IAAI,CAACP,EAAL,GAAYA,EAAZ,EAAkB,CAACO,IAAI,CAACJ,SAAzC,CACA,MAAOI,CAAAA,IAAP,CACD,CAHD,CADO,EAAD,CAAR,CAMD,CAPD,CASA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACR,EAAD,CAAgB,CACpC,GAAMS,CAAAA,WAAW,CAAGC,OAAO,CAAC,gBAAD,CAA3B,CAEAD,WAAW,EAAIpB,QAAQ,CAAC,SAACe,IAAD,QAAUA,CAAAA,IAAI,CAACO,MAAL,CAAY,SAACJ,IAAD,QAAUA,CAAAA,IAAI,CAACP,EAAL,GAAYA,EAAtB,EAAZ,CAAV,EAAD,CAAvB,CACD,CAJD,CAKA,mBACE,wCACE,KAAC,QAAD,EAAU,KAAK,CAAEH,UAAjB,EADF,cAEE,KAAC,QAAD,EACE,KAAK,CAAET,KADT,CAEE,QAAQ,CAAEoB,aAFZ,CAGE,QAAQ,CAAEH,aAHZ,EAFF,GADF,CAUD,CA7CM","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ITodo } from \"../components/interfaces\";\nimport { TodoForm } from \"../components/TodoForm\";\nimport { TodoList } from \"../components/TodoList\";\n\ndeclare var confirm: (boolean: string) => boolean;\n\nexport const TodosPages: React.FC = () => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n    const saved = JSON.parse(localStorage.getItem(\"todos\") || \"[]\") as ITodo[];\n    setTodos(saved);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const addHandler = (title: string) => {\n    const newTodo = {\n      title: title,\n      id: Date.now(),\n      completed: false,\n    };\n    setTodos((prev) => [newTodo, ...prev]);\n  };\n\n  const toggleHandler = (id: number) => {\n    setTodos((prev) =>\n      prev.map((todo) => {\n        todo.completed = todo.id === id && !todo.completed;\n        return todo;\n      })\n    );\n  };\n\n  const removeHendler = (id: number) => {\n    const shoudRemove = confirm(\"Please confirm\");\n\n    shoudRemove && setTodos((prev) => prev.filter((todo) => todo.id !== id));\n  };\n  return (\n    <>\n      <TodoForm onAdd={addHandler} />\n      <TodoList\n        todos={todos}\n        onRemove={removeHendler}\n        onToggle={toggleHandler}\n      />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}